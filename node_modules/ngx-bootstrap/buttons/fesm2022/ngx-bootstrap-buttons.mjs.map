{"version":3,"file":"ngx-bootstrap-buttons.mjs","sources":["../../../../src/buttons/button-checkbox.directive.ts","../../../../src/buttons/button-radio.directive.ts","../../../../src/buttons/button-radio-group.directive.ts","../../../../src/buttons/buttons.module.ts","../../../../src/buttons/ngx-bootstrap-buttons.ts"],"sourcesContent":["import {\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\ntype AvailableValues = boolean | string | number;\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue:AvailableValues = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse:AvailableValues = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value?: AvailableValues;\n  protected isDisabled = false;\n\n  protected onChange = Function.prototype;\n  protected onTouched = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): AvailableValues {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): AvailableValues {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: boolean | string | null): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  Optional,\n  Provider,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnChanges {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio?: unknown;\n  /** If `true` — radio button can be unchecked */\n  @Input() uncheckable = false;\n  /** Current value of radio component or group */\n  @Input()\n  get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: unknown | undefined) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n    this._onChange(value);\n  }\n  /** If `true` — radio button is disabled */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get controlOrGroupDisabled() {\n    return this.disabled || (this.group && this.group.disabled) ? true : undefined;\n  }\n\n  @HostBinding('class.disabled')\n  get hasDisabledClass() {\n    // Although the radio is disabled the active radio should still stand out.\n    // The disabled class will prevent this so don't add it on the active radio\n    return this.controlOrGroupDisabled && !this.isActive;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-checked')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  @HostBinding('attr.role') readonly role: string = 'radio';\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): undefined | number {\n    if (this.controlOrGroupDisabled) {\n      // Disabled radio buttons should not receive focus\n      return undefined;\n    } else if (this.isActive || this.group == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  private _value?: unknown;\n  private _disabled = false;\n  private _hasFocus = false;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Optional()\n    @Inject(forwardRef(() => ButtonRadioGroupDirective))\n    private group: ButtonRadioGroupDirective\n  ) {}\n\n  @HostListener('click')\n  toggleIfAllowed(): void {\n    if (!this.canToggle()) {\n      return;\n    }\n\n    if (this.uncheckable && this.btnRadio === this.value) {\n      this.value = undefined;\n    } else {\n      this.value = this.btnRadio;\n    }\n  }\n\n  @HostListener('keydown.space', ['$event'])\n  onSpacePressed(event: KeyboardEvent) {\n    this.toggleIfAllowed();\n    event.preventDefault();\n  }\n\n  focus() {\n    this.el.nativeElement.focus();\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this._hasFocus = true;\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this._hasFocus = false;\n    this.onTouched();\n  }\n\n  canToggle(): boolean {\n    return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('uncheckable' in changes) {\n      this.uncheckable = this.uncheckable !== false && typeof this.uncheckable !== 'undefined';\n    }\n  }\n\n  _onChange(value?: unknown): void {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: unknown): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disabled = disabled;\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Provider,\n  QueryList\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  @HostBinding('attr.role') readonly role: string = 'radiogroup';\n\n  @ContentChildren(forwardRef(() => ButtonRadioDirective))\n  radioButtons?: QueryList<ButtonRadioDirective>;\n\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  private _value?: unknown;\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value: unknown | undefined) {\n    this._value = value;\n    this.onChange(value);\n  }\n\n  private _disabled = false;\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): null | number {\n    if (this._disabled) {\n      return null;\n    } else {\n      return 0;\n    }\n  }\n\n  writeValue(value?: string): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.radioButtons) {\n      this._disabled = disabled;\n      this.radioButtons.forEach(buttons => {\n        buttons.setDisabledState(disabled);\n      });\n      this.cdr.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this._disabled) {\n      return;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n    if (activeRadio) {\n      activeRadio.focus();\n      return;\n    }\n\n    if (this.radioButtons) {\n      const firstEnabled = this.radioButtons.find(r => !r.disabled);\n      if (firstEnabled) {\n        firstEnabled.focus();\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  @HostListener('keydown.ArrowRight', ['$event'])\n  @HostListener('keydown.ArrowDown', ['$event'])\n  selectNext(event: KeyboardEvent) {\n    this.selectInDirection('next');\n    event.preventDefault();\n  }\n\n  @HostListener('keydown.ArrowLeft', ['$event'])\n  @HostListener('keydown.ArrowUp', ['$event'])\n  selectPrevious(event: KeyboardEvent) {\n    this.selectInDirection('previous');\n    event.preventDefault();\n  }\n\n  private selectInDirection(direction: 'next' | 'previous') {\n    if (this._disabled) {\n      return;\n    }\n\n    function nextIndex(currentIndex: number, buttonRadioDirectives: ButtonRadioDirective[]) {\n      const step = direction === 'next' ? 1 : -1;\n      let calcIndex = (currentIndex + step) % buttonRadioDirectives.length;\n      if (calcIndex < 0) {\n        calcIndex = buttonRadioDirectives.length - 1;\n      }\n\n      return calcIndex;\n    }\n\n    const activeRadio = this.getActiveOrFocusedRadio();\n\n    if (activeRadio && this.radioButtons) {\n      const buttonRadioDirectives = this.radioButtons.toArray();\n      const currentActiveIndex = buttonRadioDirectives.indexOf(activeRadio);\n      for (\n        let i = nextIndex(currentActiveIndex, buttonRadioDirectives);\n        i !== currentActiveIndex;\n        i = nextIndex(i, buttonRadioDirectives)\n      ) {\n        if (buttonRadioDirectives[i].canToggle()) {\n          buttonRadioDirectives[i].toggleIfAllowed();\n          buttonRadioDirectives[i].focus();\n          break;\n        }\n      }\n    }\n  }\n\n  private getActiveOrFocusedRadio(): ButtonRadioDirective | undefined {\n    if (!this.radioButtons) {\n      return void 0;\n    }\n\n    return this.radioButtons.find(button => button.isActive)\n      || this.radioButtons.find(button => button.hasFocus);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders<ButtonsModule> {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["RADIO_CONTROL_VALUE_ACCESSOR"],"mappings":"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"}